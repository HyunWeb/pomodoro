<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>timer</title>
    <link rel="stylesheet" href="/static/css/reset.css" />
    <link rel="stylesheet" href="/static/css/navbar.css" />
    <link rel="stylesheet" href="/static/css/timer.css" />
    <link rel="stylesheet" href="/static/css/button.css" />
    <script src="/static/js/navbar.js"></script>
    <!-- 글씨체 -->
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto&display=swap"
      rel="stylesheet"
    />
    <!-- axios CDN -->
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <header>
      <%- include("./shared/navbar") %>
      <div class="background"></div>
      <a href="/" class="logo"
        ><img width="158" src="/static/img/logo.png" alt="로고 이미지"
      /></a>
    </header>

    <div id="rightBtn" onclick="toggleRight()">
      <svg
        id="rightIcon"
        xmlns="http://www.w3.org/2000/svg"
        class="right"
        width="30"
        height="30"
        fill="#473234"
        class="bi bi-caret-right-fill"
        viewBox="0 0 16 16"
      >
        <path
          d="m12.14 8.753-5.482 4.796c-.646.566-1.658.106-1.658-.753V3.204a1 1 0 0 1 1.659-.753l5.48 4.796a1 1 0 0 1 0 1.506z"
        />
      </svg>
      <div class="timerTomato">
        <img
          width="158"
          src="/static/img/timerTomato.png"
          alt="토마토 이미지"
        />
      </div>
      <!-- 그냥 타이머 -->
      <div class="outer-timer-container">
        <div id="main-timer" class="timer-body">
          <div class="inner-cover1"></div>
          <div id="tick-marks">
            <div class="tick thick-tick"></div>
          </div>
          <div id="time-fins"></div>
          <div class="inner-cover2"></div>
        </div>
      </div>
      <svg
        id="leftIcon"
        xmlns="http://www.w3.org/2000/svg"
        class="left"
        width="30"
        height="30"
        fill="#473234"
        class="bi bi-caret-left-fill"
        viewBox="0 0 16 16"
        style="display: none"
      >
        <path
          d="m3.86 8.753 5.482 4.796c.646.566 1.658.106 1.658-.753V3.204a1 1 0 0 0-1.659-.753l-5.48 4.796a1 1 0 0 0 0 1.506z"
        />
      </svg>
    </div>
    <div class="timercontainer">
      <div id="timer" class="timer">00 : 25 : 00</div>
      <div class="buttonbox">
        <div id="startBtn" onclick="togglePlayPause()">
          <svg
            id="playIcon"
            xmlns="http://www.w3.org/2000/svg"
            width="35px"
            height="35px"
            fill="#473234"
            class="bi bi-play-circle"
            viewBox="0 0 16 16"
          >
            <path
              d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"
            />
            <path
              d="M6.271 5.055a.5.5 0 0 1 .52.038l3.5 2.5a.5.5 0 0 1 0 .814l-3.5 2.5A.5.5 0 0 1 6 10.5v-5a.5.5 0 0 1 .271-.445"
            />
          </svg>
          <svg
            id="pauseIcon"
            xmlns="http://www.w3.org/2000/svg"
            width="35px"
            height="35px"
            fill="#473234"
            class="bi bi-pause-circle"
            viewBox="0 0 16 16"
            style="display: none"
          >
            <path
              d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16"
            />
            <path
              d="M5 6.25a1.25 1.25 0 1 1 2.5 0v3.5a1.25 1.25 0 1 1-2.5 0zm3.5 0a1.25 1.25 0 1 1 2.5 0v3.5a1.25 1.25 0 1 1-2.5 0z"
            />
          </svg>
        </div>
        <div id="stopBtn" onclick="stopTimer()">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35px"
            height="35px"
            fill="#473234"
            class="bi bi-stop-circle-fill"
            viewBox="0 0 16 16"
          >
            <path
              d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M6.5 5A1.5 1.5 0 0 0 5 6.5v3A1.5 1.5 0 0 0 6.5 11h3A1.5 1.5 0 0 0 11 9.5v-3A1.5 1.5 0 0 0 9.5 5z"
            />
          </svg>
        </div>
        <div id="resetBtn" onclick="resetTimer()">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="35px"
            height="35px"
            fill="#473234"
            class="bi bi-arrow-counterclockwise"
            viewBox="0 0 16 16"
          >
            <path
              fill-rule="evenodd"
              d="M8 3a5 5 0 1 1-4.546 2.914.5.5 0 0 0-.908-.417A6 6 0 1 0 8 2z"
            />
            <path
              d="M8 4.466V.534a.25.25 0 0 0-.41-.192L5.23 2.308a.25.25 0 0 0 0 .384l2.36 1.966A.25.25 0 0 0 8 4.466"
            />
          </svg>
        </div>
      </div>
    </div>

    <script>
      // 오른쪽 왼쪽
      function toggleRight() {
        const rightIcon = document.getElementById("rightIcon");
        const leftIcon = document.getElementById("leftIcon");
        const timerTomato = document.querySelector(".timerTomato");
        const outerTimerContainer = document.querySelector(
          ".outer-timer-container"
        );
        // 토마토 이미지가 보일 때
        if (timerTomato.classList.contains("hide")) {
          // 토마토 이미지가 숨겨졌을 때는 00:00:00부터 무한대로 시작
          timeRemaining = 0; // 00:00:00부터 시작
          updateDisplay();
        } else {
          // 토마토 이미지가 보일 때는 00:25:00에서 카운트다운
          timeRemaining = 25 * 60; // 25분 (25 * 60초)
          updateDisplay();
        }
        if (rightIcon.style.display === "none") {
          rightIcon.style.display = "block";
          leftIcon.style.display = "none";
          timerTomato.classList.remove("hide");
          outerTimerContainer.classList.remove("active");
          timeRemaining = 25 * 60;
          updateDisplay();
        } else {
          rightIcon.style.display = "none";
          leftIcon.style.display = "block";
          timerTomato.classList.add("hide");
          outerTimerContainer.classList.add("active");
          timeRemaining = 0; // 00:00:00으로 초기화
          updateDisplay();
        }
      }

      // 타이머 버튼 실행
      let timerInterval;
      let timeRemaining;
      const timerDisplay = document.getElementById("timer");

      // 타이머 업데이트
      function updateDisplay() {
        const hours = String(Math.floor(timeRemaining / 3600)).padStart(2, "0");
        const minutes = String(
          Math.floor((timeRemaining % 3600) / 60)
        ).padStart(2, "0");
        const seconds = String(timeRemaining % 60).padStart(2, "0");
        timerDisplay.textContent = `${hours} : ${minutes} : ${seconds}`;
      }

      // 타이머 시작
      function startTimer() {
        timerInterval = setInterval(() => {
          // 토마토 이미지일 때는 카운트다운
          if (
            timeRemaining > 0 &&
            !document.querySelector(".timerTomato").classList.contains("hide")
          ) {
            timeRemaining--;
          } else {
            // 이미지 전환 후에는 시간이 무한대로 증가
            timeRemaining++;
          }
          updateDisplay(); // 타이머 화면 업데이트
        }, 1000);
      }

      // 타이머 일시정지
      function pauseTimer() {
        clearInterval(timerInterval);
      }

      // 타이머 중지
      function stopTimer() {
        if (confirm("정말로 타이머를 중단하시겠습니까?")) {
          clearInterval(timerInterval);
          timeRemaining = 0; // 시간을 초기화
          updateDisplay();
        }
      }

      // 타이머 초기화
      function resetTimer() {
        clearInterval(timerInterval);
        // 토마토 이미지가 보일 때만 00:25:00으로 설정
        if (
          !document.querySelector(".timerTomato").classList.contains("hide")
        ) {
          timeRemaining = 25 * 60; // 00:25:00으로 초기화
        } else {
          timeRemaining = 0; // 다른 화면일 경우 00:00:00으로 초기화
        }
        updateDisplay();
      }

      // 플레이 버튼 누르면 일시정지 버튼으로 바뀌는거.
      // 버튼 클릭 시 타이머 시작/일시정지
      function togglePlayPause() {
        const playIcon = document.getElementById("playIcon");
        const pauseIcon = document.getElementById("pauseIcon");

        if (playIcon.style.display === "none") {
          playIcon.style.display = "block";
          pauseIcon.style.display = "none";
          pauseTimer();
        } else {
          playIcon.style.display = "none";
          pauseIcon.style.display = "block";
          startTimer();
        }
      }
      // 초기화
      timeRemaining = 25 * 60; // 기본 타이머는 00:25:00에서 시작
      updateDisplay(); // 초기 화면 설정

      // 그냥 타이머
      const timer = document.getElementById("main-timer");
      const lines = timer.querySelector("#tick-marks");
      const fins = timer.querySelector("#time-fins");
      const control = document.querySelector(
        ".control-container #play-pause-control"
      );

      const endTime = 60;
      let intervalID = null;
      let progressTimeSec = 0;
      let isPlay = true;

      function paintTickMarks() {
        for (let i = 0; i < 30; i++) {
          if (i % 5 === 0) {
            const tick = document.createElement("div");
            tick.classList.add("tick", "thick-tick");
            tick.style.transform = `rotate(${i * 6}deg)`;
            lines.append(tick);
          }
        }
      }

      function paintRemainingTime() {
        for (let min = 0; min < endTime; min++) {
          for (let sec = 0; sec < 60; sec++) {
            const remainFin = document.createElement("div");
            remainFin.classList.add("fin");
            const deg = min * 6 + sec * 0.1;
            remainFin.style.transform = `rotate(${-deg}deg)`;
            fins.append(remainFin);
          }
        }
      }

      function tickSecond() {
        progressTimeSec++;
        if (progressTimeSec >= endTime * 60) pause();
        const lastFin = fins.lastChild;
        if (lastFin) {
          lastFin.remove();
        }
      }

      function play() {
        intervalID = setInterval(tickSecond, 1000);
        isPlay = true;
        control.innerHTML = `<i class="fas fa-pause"></i>`;
      }

      function pause() {
        clearInterval(intervalID);
        isPlay = false;
        control.innerHTML = `<i class="fas fa-play"></i>`;
      }

      function toggleControl() {
        if (isPlay) {
          pause();
        } else {
          play();
        }
      }

      if (lines) {
        paintTickMarks();
      }

      if (fins) {
        paintRemainingTime();
      }

      if (control) {
        control.addEventListener("click", toggleControl);
      }

      play();
    </script>
  </body>
</html>
